import { TextValue } from "https://cdn.jsdelivr.net/gh/shah/value-manager/mod.ts";

export interface TextArtifactNature {
  readonly isTextArtifactNature: true;
  readonly name: string;
  readonly fileExtensions: string[];
  readonly defaultFileExtn: string;
  readonly defaultPreamble?: TextValue;
}

export const typeScriptArtifact = new (class implements TextArtifactNature {
  readonly isTextArtifactNature = true;
  readonly name = "TypeScript";
  readonly defaultFileExtn: string = ".ts";
  readonly fileExtensions: string[] = [this.defaultFileExtn];
  readonly defaultPreamble: TextValue =
    "// Code generated by Netspective IGS. DO NOT EDIT.\n\n";

  constructor() {}
})();

export const sqlArtifact = new (class implements TextArtifactNature {
  readonly isTextArtifactNature = true;
  readonly name = "SQL";
  readonly defaultFileExtn: string = ".sql";
  readonly fileExtensions: string[] = [this.defaultFileExtn];
  readonly defaultPreamble: TextValue =
    "-- Code generated by Netspective IGS. DO NOT EDIT.\n\n";

  constructor() {}
})();

export const postgreSqlArtifact = new (class implements TextArtifactNature {
  readonly isTextArtifactNature = true;
  readonly name = "PostgreSQL";
  readonly defaultFileExtn: string = ".psql";
  readonly fileExtensions: string[] = [this.defaultFileExtn];
  readonly defaultPreamble: TextValue =
    "-- Code generated by Netspective IGS. DO NOT EDIT.\n\n";

  constructor() {}
})();

export const plantUmlArtifact = new (class implements TextArtifactNature {
  readonly isTextArtifactNature = true;
  readonly name = "PlantUML";
  readonly defaultFileExtn: string = ".puml";
  readonly fileExtensions: string[] = [this.defaultFileExtn];
  readonly defaultPreamble: TextValue =
    "// Code generated by Netspective IGS. DO NOT EDIT.\n\n";

  constructor() {}
})();

export const yamlArtifact = new (class implements TextArtifactNature {
  readonly isTextArtifactNature = true;
  readonly name = "YAML";
  readonly defaultFileExtn: string = ".yaml";
  readonly fileExtensions: string[] = [this.defaultFileExtn, ".yml"];
  readonly defaultPreamble: TextValue =
    "# Code generated by Netspective IGS. DO NOT EDIT.\n\n";

  constructor() {}
})();

export const dockerfileArtifact = new (class implements TextArtifactNature {
  readonly isTextArtifactNature = true;
  readonly name = "Dockerfile";
  readonly defaultFileExtn: string = ".dockerfile";
  readonly fileExtensions: string[] = [this.defaultFileExtn];
  readonly defaultPreamble: TextValue =
    "# Code generated by Netspective IGS. DO NOT EDIT.\n\n";

  constructor() {}
})();

export const jsonArtifact = new (class implements TextArtifactNature {
  readonly isTextArtifactNature = true;
  readonly name = "JSON";
  readonly defaultFileExtn: string = ".json";
  readonly fileExtensions: string[] = [this.defaultFileExtn];

  constructor() {}
})();

export const shfileArtifact = new (class implements TextArtifactNature {
  readonly isTextArtifactNature = true;
  readonly name = "SH";
  readonly defaultFileExtn: string = ".sh";
  readonly fileExtensions: string[] = [this.defaultFileExtn];
  readonly defaultPreamble: TextValue =
    "# Code generated by Netspective IGS. DO NOT EDIT.\n\n";

  constructor() {}
})();

export class ArtifactNatureFactory {
  readonly natures: Map<string, TextArtifactNature> = new Map();
  readonly typeScript = typeScriptArtifact;
  readonly sql = sqlArtifact;
  readonly postgresPsql = postgreSqlArtifact;
  readonly plantUML = plantUmlArtifact;
  readonly yaml = yamlArtifact;
  readonly json = jsonArtifact;
  readonly dockerfile = dockerfileArtifact;
  readonly sh = shfileArtifact;

  constructor() {
    this.natures.set(typeScriptArtifact.defaultFileExtn, typeScriptArtifact);
    this.natures.set(sqlArtifact.defaultFileExtn, sqlArtifact);
    this.natures.set(plantUmlArtifact.defaultFileExtn, plantUmlArtifact);
    this.natures.set(yamlArtifact.defaultFileExtn, yamlArtifact);
    this.natures.set(dockerfileArtifact.defaultFileExtn, dockerfileArtifact);
    this.natures.set(shfileArtifact.defaultFileExtn, shfileArtifact);
  }
}

export const artifactNatureFactory = new ArtifactNatureFactory();
